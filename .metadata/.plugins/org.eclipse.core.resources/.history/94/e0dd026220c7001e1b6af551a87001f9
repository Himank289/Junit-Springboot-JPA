package com.in28minutes.jpa.hibernate.demo;



import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

import javax.persistence.Query;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.data.domain.Sort;

import com.in28minutes.jpa.hibernate.demo.entity.Course;
//import com.in28minutes.jpa.hibernate.demo.entity.Employee1;
import com.in28minutes.jpa.hibernate.demo.repository.CourseSpringDataJpaRepository;
import com.in28minutes.jpa.hibernate.demo.repository.FacultySpringDataJpaRepository;



@SpringBootApplication
public class DemoApplicationDataJpa implements CommandLineRunner {

	private Logger logger = LoggerFactory.getLogger(this.getClass());


	@Autowired
	private CourseSpringDataJpaRepository repo;
	private FacultySpringDataJpaRepository repo1;


	public static void main(String[] args) {
		SpringApplication.run(DemoApplication.class, args);
	}

	@Override
	public void run(String... arg0) throws Exception {
		

		Course c = new Course("Java",1200);
		
		repo.save(c);
	
		Course c1 = new Course("OOPS",2300);
		repo.save(c1);
		
		Course c2 = new Course("SPRINGBOOT",1300);
		repo.save(c2);
		
		Course c3 = new Course("C++",2200);
		repo.save(c3);
		
	
		
	   
		
//	    System.out.println(repo.findById(9L));
		
		logger.info("Courses Total count -> {} ", repo.count());
	    System.out.println("count no of courses based on name:"+repo.countByCourseName("Java"));
	    
	    System.out.println("retrieve course based on name and order:"+repo.findByCourseNameOrderByCourseIdDesc("OOPS"));
	    
	    
		Sort sort = Sort.by(Sort.Direction.ASC, "CourseName");
		logger.info("Sorted Courses based on names in ascending order: -> {} ", repo.findAll(sort));
		
		
	   // repo.delete(e3);
		
		System.out.println(repo.count());
		
		repo.deleteByCourseName("SPRINGBOOT");
		
		System.out.println(repo.count());
		
		System.out.println(repo.findAll());
	  
		
//		Optional<Course> opc1 =repo.findById(2);
//		if(opc1.isPresent()) {
//			
//		}
		
	  
		

		
	}
}
